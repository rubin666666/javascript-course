// ===========================================
// –†–Ü–®–ï–ù–ù–Ø –ó–ê–í–î–ê–ù–¨ - –£–†–û–ö 4: –¶–ò–ö–õ–ò
// ===========================================

console.log("=== –ó–ê–í–î–ê–ù–ù–Ø 1: FOR –¶–ò–ö–õ ===");

// –ó–∞–≤–¥–∞–Ω–Ω—è 1.1: –¢–∞–±–ª–∏—Ü—è –º–Ω–æ–∂–µ–Ω–Ω—è
console.log("–¢–∞–±–ª–∏—Ü—è –º–Ω–æ–∂–µ–Ω–Ω—è –Ω–∞ 7:");
for (let i = 1; i <= 10; i++) {
    console.log(`7 √ó ${i} = ${7 * i}`);
}

// –ó–∞–≤–¥–∞–Ω–Ω—è 1.2: –°—É–º–∞ —á–∏—Å–µ–ª –≤—ñ–¥ 1 –¥–æ 100
let sum = 0;
for (let i = 1; i <= 100; i++) {
    sum += i;
}
console.log(`\n–°—É–º–∞ —á–∏—Å–µ–ª –≤—ñ–¥ 1 –¥–æ 100: ${sum}`);

// –ó–∞–≤–¥–∞–Ω–Ω—è 1.3: –ü–∞—Ä–Ω—ñ —á–∏—Å–ª–∞ –≤—ñ–¥ 2 –¥–æ 20
console.log("\n–ü–∞—Ä–Ω—ñ —á–∏—Å–ª–∞ –≤—ñ–¥ 2 –¥–æ 20:");
for (let i = 2; i <= 20; i += 2) {
    console.log(i);
}

// –ó–∞–≤–¥–∞–Ω–Ω—è 1.4: –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –≤—ñ–¥–ª—ñ–∫
console.log("\n–ó–≤–æ—Ä–æ—Ç–Ω–∏–π –≤—ñ–¥–ª—ñ–∫ –≤—ñ–¥ 10 –¥–æ 1:");
for (let i = 10; i >= 1; i--) {
    console.log(i);
}
console.log("–ü—É—Å–∫! üöÄ");

console.log("\n=== –ó–ê–í–î–ê–ù–ù–Ø 2: WHILE –¶–ò–ö–õ ===");

// –ó–∞–≤–¥–∞–Ω–Ω—è 2.1: –ó–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –ø–µ—Ä—à–æ–≥–æ —á–∏—Å–ª–∞ >= 50
let current = 1;
while (current < 50) {
    current *= 2; // 1, 2, 4, 8, 16, 32, 64
}
console.log(`–ü–µ—Ä—à–µ —á–∏—Å–ª–æ >= 50 –ø—Ä–∏ –ø–æ–¥–≤–æ—î–Ω–Ω—ñ: ${current}`);

// –ó–∞–≤–¥–∞–Ω–Ω—è 2.2: –ì—Ä–∞ "–í–≥–∞–¥–∞–π —á–∏—Å–ª–æ"
let secretNumber = 7;
let guess = 1;
let attempts = 0;

console.log("\n–ì—Ä–∞ '–í–≥–∞–¥–∞–π —á–∏—Å–ª–æ' (–∑–∞–≥–∞–¥–∞–Ω–µ: 7):");
while (guess !== secretNumber) {
    attempts++;
    console.log(`–°–ø—Ä–æ–±–∞ ${attempts}: ${guess}`);
    if (guess < secretNumber) {
        console.log("–ó–∞–Ω–∞–¥—Ç–æ –º–∞–ª–æ!");
        guess++;
    } else if (guess > secretNumber) {
        console.log("–ó–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ!");
        guess--;
    }
}
console.log(`üéâ –í–≥–∞–¥–∞–ª–∏! –ß–∏—Å–ª–æ ${secretNumber} –∑–∞ ${attempts} —Å–ø—Ä–æ–±`);

// –ó–∞–≤–¥–∞–Ω–Ω—è 2.3: –§–∞–∫—Ç–æ—Ä—ñ–∞–ª —á–∏—Å–ª–∞
let number = 5;
let factorial = 1;
let temp = number;

while (temp > 0) {
    factorial *= temp;
    temp--;
}
console.log(`\n–§–∞–∫—Ç–æ—Ä—ñ–∞–ª ${number}! = ${factorial}`);

console.log("\n=== –ó–ê–í–î–ê–ù–ù–Ø 3: DO-WHILE –¶–ò–ö–õ ===");

// –ó–∞–≤–¥–∞–Ω–Ω—è 3.1: –í–∞–ª—ñ–¥–∞—Ü—ñ—è –≤–≤–æ–¥—É (—ñ–º—ñ—Ç–∞—Ü—ñ—è)
let userInput;
let validInputs = ["—Ç–∞–∫", "–Ω—ñ", "–º–æ–∂–ª–∏–≤–æ"];
let inputAttempts = 0;

do {
    inputAttempts++;
    // –Ü–º—ñ—Ç—É—î–º–æ —Ä—ñ–∑–Ω—ñ –≤–≤–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    let possibleInputs = ["–º–æ–∂–µ", "—Ç–∞–∫", "–Ω—ñ–≤—Ä–æ–¥–µ", "–Ω—ñ"];
    userInput = possibleInputs[inputAttempts - 1] || "—Ç–∞–∫";
    
    console.log(`–°–ø—Ä–æ–±–∞ ${inputAttempts}: –≤–≤–µ–¥–µ–Ω–æ "${userInput}"`);
    
    if (!validInputs.includes(userInput)) {
        console.log("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–≤—ñ–¥! –í–≤–µ–¥—ñ—Ç—å '—Ç–∞–∫', '–Ω—ñ' –∞–±–æ '–º–æ–∂–ª–∏–≤–æ'");
    }
} while (!validInputs.includes(userInput) && inputAttempts < 4);

if (validInputs.includes(userInput)) {
    console.log(`‚úÖ –ü—Ä–∏–π–Ω—è—Ç–æ: "${userInput}"`);
}

console.log("\n=== –ó–ê–í–î–ê–ù–ù–Ø 4: FOR-OF –¶–ò–ö–õ (–ú–ê–°–ò–í–ò) ===");

// –ó–∞–≤–¥–∞–Ω–Ω—è 4.1: –ü–µ—Ä–µ–±—ñ—Ä —Ñ—Ä—É–∫—Ç—ñ–≤
let fruits = ["—è–±–ª—É–∫–æ", "–±–∞–Ω–∞–Ω", "–∞–ø–µ–ª—å—Å–∏–Ω", "–≥—Ä—É—à–∞", "–≤–∏–Ω–æ–≥—Ä–∞–¥"];
console.log("–°–ø–∏—Å–æ–∫ —Ñ—Ä—É–∫—Ç—ñ–≤:");
for (let fruit of fruits) {
    console.log(`üçé ${fruit}`);
}

// –ó–∞–≤–¥–∞–Ω–Ω—è 4.2: –û–±—á–∏—Å–ª–µ–Ω–Ω—è —Å–µ—Ä–µ–¥–Ω—å–æ—ó –æ—Ü—ñ–Ω–∫–∏
let grades = [85, 92, 78, 96, 88, 73, 91];
let total = 0;
let count = 0;

for (let grade of grades) {
    total += grade;
    count++;
}
let average = total / count;
console.log(`\n–û—Ü—ñ–Ω–∫–∏: ${grades.join(", ")}`);
console.log(`–°–µ—Ä–µ–¥–Ω—è –æ—Ü—ñ–Ω–∫–∞: ${average.toFixed(1)}`);

// –ó–∞–≤–¥–∞–Ω–Ω—è 4.3: –ü–æ—à—É–∫ –Ω–∞–π–±—ñ–ª—å—à–æ–≥–æ —á–∏—Å–ª–∞
let numbers = [23, 45, 12, 67, 34, 89, 15];
let max = numbers[0];

for (let num of numbers) {
    if (num > max) {
        max = num;
    }
}
console.log(`\n–ß–∏—Å–ª–∞: ${numbers.join(", ")}`);
console.log(`–ù–∞–π–±—ñ–ª—å—à–µ —á–∏—Å–ª–æ: ${max}`);

console.log("\n=== –ó–ê–í–î–ê–ù–ù–Ø 5: FOR-IN –¶–ò–ö–õ (–û–ë'–Ñ–ö–¢–ò) ===");

// –ó–∞–≤–¥–∞–Ω–Ω—è 5.1: –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
let student = {
    name: "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–µ–Ω–∫–æ",
    age: 20,
    course: 2,
    faculty: "–Ü–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
    gpa: 4.2
};

console.log("–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å—Ç—É–¥–µ–Ω—Ç–∞:");
for (let key in student) {
    console.log(`${key}: ${student[key]}`);
}

// –ó–∞–≤–¥–∞–Ω–Ω—è 5.2: –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—à–∏–∫—É
let shoppingCart = {
    "–º–æ–ª–æ–∫–æ": 2,
    "—Ö–ª—ñ–±": 1,
    "—è–π—Ü—è": 12,
    "–º–∞—Å–ª–æ": 1,
    "—Å–∏—Ä": 3
};

console.log("\n–ö–æ—à–∏–∫ –ø–æ–∫—É–ø–æ–∫:");
let totalItems = 0;
for (let product in shoppingCart) {
    let quantity = shoppingCart[product];
    console.log(`${product}: ${quantity} —à—Ç.`);
    totalItems += quantity;
}
console.log(`–ó–∞–≥–∞–ª–æ–º —Ç–æ–≤–∞—Ä—ñ–≤: ${totalItems}`);

// –ó–∞–≤–¥–∞–Ω–Ω—è 5.3: –†–µ–π—Ç–∏–Ω–≥ —Ñ—ñ–ª—å–º—ñ–≤
let movieRatings = {
    "Avengers": 8.4,
    "Inception": 8.8,
    "Interstellar": 8.6,
    "The Matrix": 8.7,
    "Pulp Fiction": 8.9
};

console.log("\n–†–µ–π—Ç–∏–Ω–≥ —Ñ—ñ–ª—å–º—ñ–≤:");
let bestMovie = "";
let highestRating = 0;

for (let movie in movieRatings) {
    let rating = movieRatings[movie];
    console.log(`${movie}: ‚≠ê ${rating}/10`);
    
    if (rating > highestRating) {
        highestRating = rating;
        bestMovie = movie;
    }
}
console.log(`üèÜ –ù–∞–π–∫—Ä–∞—â–∏–π —Ñ—ñ–ª—å–º: "${bestMovie}" (${highestRating}/10)`);

console.log("\n=== –ó–ê–í–î–ê–ù–ù–Ø 6: –í–ö–õ–ê–î–ï–ù–Ü –¶–ò–ö–õ–ò ===");

// –ó–∞–≤–¥–∞–Ω–Ω—è 6.1: –¢–∞–±–ª–∏—Ü—è –º–Ω–æ–∂–µ–Ω–Ω—è 5x5
console.log("–¢–∞–±–ª–∏—Ü—è –º–Ω–æ–∂–µ–Ω–Ω—è 5√ó5:");
console.log("   ", 1, 2, 3, 4, 5);
for (let i = 1; i <= 5; i++) {
    let row = `${i}: `;
    for (let j = 1; j <= 5; j++) {
        row += `${(i * j).toString().padStart(2)} `;
    }
    console.log(row);
}

// –ó–∞–≤–¥–∞–Ω–Ω—è 6.2: –ü–∞—Ç–µ—Ä–Ω –∑—ñ—Ä–æ—á–æ–∫
console.log("\n–ü–∞—Ç–µ—Ä–Ω –∑—ñ—Ä–æ—á–æ–∫:");
for (let i = 1; i <= 5; i++) {
    let stars = "";
    for (let j = 1; j <= i; j++) {
        stars += "‚≠ê";
    }
    console.log(stars);
}

console.log("\n=== –ó–ê–í–î–ê–ù–ù–Ø 7: –ü–†–ê–ö–¢–ò–ß–ù–ò–ô –ü–†–ò–ö–õ–ê–î ===");

// –ó–∞–≤–¥–∞–Ω–Ω—è 7.1: –ê–Ω–∞–ª—ñ–∑ –ø—Ä–æ–¥–∞–∂—ñ–≤ –ø–æ –º—ñ—Å—è—Ü—è—Ö
let salesData = [
    { month: "–°—ñ—á–µ–Ω—å", sales: 15000, target: 12000 },
    { month: "–õ—é—Ç–∏–π", sales: 18000, target: 15000 },
    { month: "–ë–µ—Ä–µ–∑–µ–Ω—å", sales: 11000, target: 13000 },
    { month: "–ö–≤—ñ—Ç–µ–Ω—å", sales: 22000, target: 16000 },
    { month: "–¢—Ä–∞–≤–µ–Ω—å", sales: 19000, target: 18000 }
];

console.log("--- –ó–í–Ü–¢ –ü–û –ü–†–û–î–ê–ñ–ê–• ---");
let totalSales = 0;
let totalTarget = 0;
let successfulMonths = 0;

for (let data of salesData) {
    let { month, sales, target } = data;
    let achievement = ((sales / target) * 100).toFixed(1);
    let status = sales >= target ? "‚úÖ" : "‚ùå";
    
    console.log(`${month}: ${sales} –≥—Ä–Ω (–ø–ª–∞–Ω: ${target} –≥—Ä–Ω) - ${achievement}% ${status}`);
    
    totalSales += sales;
    totalTarget += target;
    
    if (sales >= target) {
        successfulMonths++;
    }
}

let overallAchievement = ((totalSales / totalTarget) * 100).toFixed(1);
console.log(`\nüìä –ü–Ü–î–°–£–ú–û–ö:`);
console.log(`–ó–∞–≥–∞–ª—å–Ω—ñ –ø—Ä–æ–¥–∞–∂—ñ: ${totalSales} –≥—Ä–Ω`);
console.log(`–ó–∞–≥–∞–ª—å–Ω–∏–π –ø–ª–∞–Ω: ${totalTarget} –≥—Ä–Ω`);
console.log(`–í–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–ª–∞–Ω—É: ${overallAchievement}%`);
console.log(`–£—Å–ø—ñ—à–Ω–∏—Ö –º—ñ—Å—è—Ü—ñ–≤: ${successfulMonths}/${salesData.length}`);

// ===========================================
// –ü–û–†–ê–î–ò –©–û–î–û –í–ò–ö–û–ù–ê–ù–ù–Ø:
// ===========================================

/*
üí° –ö–õ–Æ–ß–û–í–Ü –ú–û–ú–ï–ù–¢–ò:

1. FOR –¶–ò–ö–õ:
   - for (—ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è; —É–º–æ–≤–∞; –∫—Ä–æ–∫) { –∫–æ–¥ }
   - –ù–∞–π–∫—Ä–∞—â–∏–π –¥–ª—è –≤—ñ–¥–æ–º–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —ñ—Ç–µ—Ä–∞—Ü—ñ–π
   - –ú–æ–∂–Ω–∞ –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –∫—Ä–æ–∫ (i++, i+=2, i--)

2. WHILE –¶–ò–ö–õ:
   - while (—É–º–æ–≤–∞) { –∫–æ–¥ }  
   - –ü–µ—Ä–µ–≤—ñ—Ä—è—î —É–º–æ–≤—É –ü–ï–†–ï–î –≤–∏–∫–æ–Ω–∞–Ω–Ω—è–º
   - –ü—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è –Ω–µ–≤—ñ–¥–æ–º–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —ñ—Ç–µ—Ä–∞—Ü—ñ–π

3. DO-WHILE –¶–ò–ö–õ:
   - do { –∫–æ–¥ } while (—É–º–æ–≤–∞)
   - –í–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ú–Ü–ù–Ü–ú–£–ú –û–î–ò–ù –†–ê–ó
   - –ö–æ—Ä–∏—Å–Ω–∏–π –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –≤–≤–æ–¥—É

4. FOR-OF –¶–ò–ö–õ:
   - for (element of array) { –∫–æ–¥ }
   - –Ü–¥–µ–∞–ª—å–Ω–∏–π –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—ñ–≤
   - –î–∞—î –¥–æ—Å—Ç—É–ø –¥–æ –ó–ù–ê–ß–ï–ù–¨ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤

5. FOR-IN –¶–ò–ö–õ:
   - for (key in object) { –∫–æ–¥ }
   - –î–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –æ–±'—î–∫—Ç—ñ–≤
   - –î–∞—î –¥–æ—Å—Ç—É–ø –¥–æ –ö–õ–Æ–ß–Ü–í (–Ω–∞–∑–≤ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π)

üö´ –ù–ê–ô–ß–ê–°–¢–Ü–®–Ü –ü–û–ú–ò–õ–ö–ò:
- –ë–µ–∑–∫—ñ–Ω–µ—á–Ω—ñ —Ü–∏–∫–ª–∏ (–∑–∞–±—É–≤–∞—é—Ç—å –∑–º—ñ–Ω—é–≤–∞—Ç–∏ —É–º–æ–≤—É)
- –ü–ª—É—Ç–∞–Ω–Ω—è for-in —Ç–∞ for-of
- –í–∏—Ö—ñ–¥ –∑–∞ –º–µ–∂—ñ –º–∞—Å–∏–≤—É
- –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞

üèÜ –ö–†–ê–©–Ü –ü–†–ê–ö–¢–ò–ö–ò:
- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –æ–ø–∏—Å–æ–≤—ñ –Ω–∞–∑–≤–∏ –∑–º—ñ–Ω–Ω–∏—Ö (i, j, k —Ç—ñ–ª—å–∫–∏ –¥–ª—è –ø—Ä–æ—Å—Ç–∏—Ö —Ü–∏–∫–ª—ñ–≤)
- –£–Ω–∏–∫–∞–π –≤–∫–ª–∞–¥–µ–Ω–∏—Ö —Ü–∏–∫–ª—ñ–≤ –±—ñ–ª—å—à–µ 2-3 —Ä—ñ–≤–Ω—ñ–≤
- –î–æ–¥–∞–≤–∞–π break/continue –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
- –¢–µ—Å—Ç—É–π –≥—Ä–∞–Ω–∏—á–Ω—ñ –≤–∏–ø–∞–¥–∫–∏ (–ø–æ—Ä–æ–∂–Ω—ñ –º–∞—Å–∏–≤–∏, 0 —ñ—Ç–µ—Ä–∞—Ü—ñ–π)
*/