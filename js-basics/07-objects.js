// ===========================================
// üèóÔ∏è –£–†–û–ö 7: –û–ë'–Ñ–ö–¢–ò –í JAVASCRIPT (OBJECTS)
// ===========================================

/*
üìö –©–û –í–ò–í–ß–ò–ú–û –í –¶–¨–û–ú–£ –£–†–û–¶–Ü:
- –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤ —Ä—ñ–∑–Ω–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏
- –î–æ—Å—Ç—É–ø –¥–æ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π —Ç–∞ –º–µ—Ç–æ–¥—ñ–≤
- –ú–µ—Ç–æ–¥–∏ —Ä–æ–±–æ—Ç–∏ –∑ –æ–±'—î–∫—Ç–∞–º–∏
- –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –æ–±'—î–∫—Ç—ñ–≤
- –ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –ø—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
*/

console.log("=== üèóÔ∏è –°–¢–í–û–†–ï–ù–ù–Ø –û–ë'–Ñ–ö–¢–Ü–í ===");

// üìñ –û–ë'–Ñ–ö–¢ - —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–∏—Ö –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –ø–æ–≤'—è–∑–∞–Ω–∏—Ö –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π —ñ –º–µ—Ç–æ–¥—ñ–≤

// üéØ –°–ø–æ—Å—ñ–± 1: –õ—ñ—Ç–µ—Ä–∞–ª—å–Ω–∞ –Ω–æ—Ç–∞—Ü—ñ—è (–Ω–∞–π–ø–æ—à–∏—Ä–µ–Ω—ñ—à–∏–π)
let userProfile = {
    name: "–ê–Ω–Ω–∞ –ö–æ–≤–∞–ª—å",
    age: 28,
    city: "–ö–∏—ó–≤",
    isStudent: false,
    skills: ["HTML", "CSS", "JavaScript"]
};

// üéØ –°–ø–æ—Å—ñ–± 2: –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Object
let vehicleInfo = new Object();
vehicleInfo.brand = "üöó Toyota";
vehicleInfo.model = "Camry";
vehicleInfo.year = 2020;
vehicleInfo.isElectric = false;

console.log("üë§ –ü—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:", userProfile);
console.log("üöó –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∞–≤—Ç–æ:", vehicleInfo);

console.log("\n=== –î–û–°–¢–£–ü –î–û –í–õ–ê–°–¢–ò–í–û–°–¢–ï–ô ===");

// –ö—Ä–∞–ø–∫–æ–≤–∞ –Ω–æ—Ç–∞—Ü—ñ—è
console.log("–Ü–º'—è:", person.name);
console.log("–í—ñ–∫:", person.age);

// –ö–≤–∞–¥—Ä–∞—Ç–Ω—ñ –¥—É–∂–∫–∏
console.log("–ú—ñ—Å—Ç–æ:", person["city"]);
console.log("–°—Ç—É–¥–µ–Ω—Ç:", person["isStudent"]);

// –î–∏–Ω–∞–º—ñ—á–Ω–∏–π –¥–æ—Å—Ç—É–ø
let property = "age";
console.log(`–í–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å ${property}:`, person[property]);

// –î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π
person.profession = "–¥–∏–∑–∞–π–Ω–µ—Ä";
person["hobby"] = "–º–∞–ª—é–≤–∞–Ω–Ω—è";

console.log("–û–Ω–æ–≤–ª–µ–Ω–∏–π person:", person);

console.log("\n=== –ú–ï–¢–û–î–ò –û–ë'–Ñ–ö–¢–ê ===");

let calculator = {
    result: 0,
    
    add: function(x) {
        this.result += x;
        return this; // –î–ª—è –ª–∞–Ω—Ü—é–∂–∫–æ–≤–∏—Ö –≤–∏–∫–ª–∏–∫—ñ–≤
    },
    
    subtract: function(x) {
        this.result -= x;
        return this;
    },
    
    multiply: function(x) {
        this.result *= x;
        return this;
    },
    
    divide: function(x) {
        if (x !== 0) {
            this.result /= x;
        }
        return this;
    },
    
    clear: function() {
        this.result = 0;
        return this;
    },
    
    getValue: function() {
        return this.result;
    }
};

// –õ–∞–Ω—Ü—é–∂–∫–æ–≤—ñ –≤–∏–∫–ª–∏–∫–∏
let result = calculator.add(10).multiply(2).subtract(5).getValue();
console.log("–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—á–∏—Å–ª–µ–Ω—å:", result);

console.log("\n=== –î–ï–°–¢–†–£–ö–¢–£–†–ò–ó–ê–¶–Ü–Ø –û–ë'–Ñ–ö–¢–Ü–í ===");

let user = {
    id: 1,
    username: "john_doe",
    email: "john@example.com",
    profile: {
        firstName: "John",
        lastName: "Doe",
        avatar: "avatar.jpg"
    }
};

// –ü—Ä–æ—Å—Ç–∞ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è
let {username, email} = user;
console.log("Username:", username);
console.log("Email:", email);

// –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –∑ –ø–µ—Ä–µ–π–º–µ–Ω—É–≤–∞–Ω–Ω—è–º
let {id: userId, username: login} = user;
console.log("User ID:", userId);
console.log("Login:", login);

// –í–∫–ª–∞–¥–µ–Ω–∞ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è
let {profile: {firstName, lastName}} = user;
console.log(`–ü–æ–≤–Ω–µ —ñ–º'—è: ${firstName} ${lastName}`);

// –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –∑ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
let {phone = "–ù–µ –≤–∫–∞–∑–∞–Ω–æ", address = "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"} = user;
console.log("–¢–µ–ª–µ—Ñ–æ–Ω:", phone);
console.log("–ê–¥—Ä–µ—Å–∞:", address);

console.log("\n=== –ö–û–ü–Ü–Æ–í–ê–ù–ù–Ø –û–ë'–Ñ–ö–¢–Ü–í ===");

// –ü–æ–≤–µ—Ä—Ö–Ω–µ–≤–∞ –∫–æ–ø—ñ—è (shallow copy)
let originalObject = {
    name: "Test",
    numbers: [1, 2, 3],
    nested: {value: 42}
};

// Spread operator
let shallowCopy1 = {...originalObject};

// Object.assign()
let shallowCopy2 = Object.assign({}, originalObject);

console.log("–û—Ä–∏–≥—ñ–Ω–∞–ª:", originalObject);
console.log("–ö–æ–ø—ñ—è 1:", shallowCopy1);

// –ó–º—ñ–Ω–∞ –≤–∫–ª–∞–¥–µ–Ω–∏—Ö –æ–±'—î–∫—Ç—ñ–≤ –≤–ø–ª–∏–≤–∞—î –Ω–∞ –≤—Å—ñ –∫–æ–ø—ñ—ó
shallowCopy1.nested.value = 100;
console.log("–ü—ñ—Å–ª—è –∑–º—ñ–Ω–∏ –≤–∫–ª–∞–¥–µ–Ω–æ–≥–æ –æ–±'—î–∫—Ç–∞:");
console.log("–û—Ä–∏–≥—ñ–Ω–∞–ª:", originalObject.nested.value);
console.log("–ö–æ–ø—ñ—è:", shallowCopy1.nested.value);

// –ì–ª–∏–±–æ–∫–∞ –∫–æ–ø—ñ—è (deep copy)
let deepCopy = JSON.parse(JSON.stringify(originalObject));
deepCopy.nested.value = 200;
console.log("–ü—ñ—Å–ª—è –≥–ª–∏–±–æ–∫–æ—ó –∫–æ–ø—ñ—ó:");
console.log("–û—Ä–∏–≥—ñ–Ω–∞–ª:", originalObject.nested.value);
console.log("–ì–ª–∏–±–æ–∫–∞ –∫–æ–ø—ñ—è:", deepCopy.nested.value);

console.log("\n=== –ú–ï–¢–û–î–ò Object ===");

let product = {
    name: "–ù–æ—É—Ç–±—É–∫",
    price: 25000,
    brand: "Apple",
    inStock: true
};

// Object.keys() - –º–∞—Å–∏–≤ –∫–ª—é—á—ñ–≤
let keys = Object.keys(product);
console.log("–ö–ª—é—á—ñ:", keys);

// Object.values() - –º–∞—Å–∏–≤ –∑–Ω–∞—á–µ–Ω—å
let values = Object.values(product);
console.log("–ó–Ω–∞—á–µ–Ω–Ω—è:", values);

// Object.entries() - –º–∞—Å–∏–≤ –ø–∞—Ä [–∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–Ω—è]
let entries = Object.entries(product);
console.log("–ü–∞—Ä–∏ –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–Ω—è:", entries);

// Object.hasOwnProperty() - –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ
console.log("–ú–∞—î –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å 'price':", product.hasOwnProperty('price'));
console.log("–ú–∞—î –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å 'color':", product.hasOwnProperty('color'));

// Object.freeze() - –∑–∞–º–æ—Ä–æ–∂—É–≤–∞–Ω–Ω—è –æ–±'—î–∫—Ç–∞
let frozenObj = Object.freeze({name: "Frozen", value: 123});
frozenObj.name = "Changed"; // –ù–µ —Å–ø—Ä–∞—Ü—é—î
console.log("–ó–∞–º–æ—Ä–æ–∂–µ–Ω–∏–π –æ–±'—î–∫—Ç:", frozenObj);

console.log("\n=== –ü–ï–†–ï–ë–Ü–† –û–ë'–Ñ–ö–¢–Ü–í ===");

let scores = {
    –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞: 95,
    —Ñ—ñ–∑–∏–∫–∞: 87,
    —Ö—ñ–º—ñ—è: 92,
    —ñ—Å—Ç–æ—Ä—ñ—è: 89
};

// for...in
console.log("–û—Ü—ñ–Ω–∫–∏ (for...in):");
for (let subject in scores) {
    console.log(`${subject}: ${scores[subject]}`);
}

// Object.entries() –∑ for...of
console.log("\n–û—Ü—ñ–Ω–∫–∏ (Object.entries):");
for (let [subject, score] of Object.entries(scores)) {
    console.log(`${subject}: ${score}`);
}

// forEach –∑ Object.entries
console.log("\n–û—Ü—ñ–Ω–∫–∏ (forEach):");
Object.entries(scores).forEach(([subject, score]) => {
    console.log(`${subject}: ${score}`);
});

console.log("\n=== –ì–ï–¢–¢–ï–†–ò –Ü –°–ï–¢–¢–ï–†–ò ===");

let rectangle = {
    width: 10,
    height: 5,
    
    get area() {
        return this.width * this.height;
    },
    
    get perimeter() {
        return 2 * (this.width + this.height);
    },
    
    set dimensions(value) {
        [this.width, this.height] = value;
    }
};

console.log("–®–∏—Ä–∏–Ω–∞:", rectangle.width);
console.log("–í–∏—Å–æ—Ç–∞:", rectangle.height);
console.log("–ü–ª–æ—â–∞:", rectangle.area);
console.log("–ü–µ—Ä–∏–º–µ—Ç—Ä:", rectangle.perimeter);

rectangle.dimensions = [15, 8];
console.log("–ù–æ–≤—ñ —Ä–æ–∑–º—ñ—Ä–∏:");
console.log("–ü–ª–æ—â–∞:", rectangle.area);
console.log("–ü–µ—Ä–∏–º–µ—Ç—Ä:", rectangle.perimeter);

console.log("\n=== –ü–†–ê–ö–¢–ò–ß–ù–Ü –ü–†–ò–ö–õ–ê–î–ò ===");

// –ü—Ä–∏–∫–ª–∞–¥ 1: –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏
let userManager = {
    users: [],
    
    addUser: function(userData) {
        let user = {
            id: this.users.length + 1,
            ...userData,
            createdAt: new Date().toISOString()
        };
        this.users.push(user);
        return user;
    },
    
    findUser: function(id) {
        return this.users.find(user => user.id === id);
    },
    
    updateUser: function(id, updates) {
        let user = this.findUser(id);
        if (user) {
            Object.assign(user, updates);
            user.updatedAt = new Date().toISOString();
        }
        return user;
    },
    
    deleteUser: function(id) {
        let index = this.users.findIndex(user => user.id === id);
        if (index !== -1) {
            return this.users.splice(index, 1)[0];
        }
        return null;
    },
    
    getAllUsers: function() {
        return [...this.users];
    }
};

// –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏
userManager.addUser({name: "–ê–Ω–Ω–∞", email: "anna@example.com"});
userManager.addUser({name: "–ü–µ—Ç—Ä–æ", email: "petro@example.com"});

console.log("–í—Å—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ:", userManager.getAllUsers());

userManager.updateUser(1, {name: "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä—ñ–≤–Ω–∞"});
console.log("–û–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á:", userManager.findUser(1));

// –ü—Ä–∏–∫–ª–∞–¥ 2: –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –¥–æ–¥–∞—Ç–∫—É
let appConfig = {
    api: {
        baseUrl: "https://api.example.com",
        version: "v1",
        timeout: 5000
    },
    
    ui: {
        theme: "dark",
        language: "uk",
        showNotifications: true
    },
    
    features: {
        enableAnalytics: true,
        enableChat: false,
        maxFileSize: 1024 * 1024 * 5 // 5MB
    },
    
    get apiUrl() {
        return `${this.api.baseUrl}/${this.api.version}`;
    },
    
    updateConfig: function(path, value) {
        let keys = path.split('.');
        let obj = this;
        
        for (let i = 0; i < keys.length - 1; i++) {
            obj = obj[keys[i]];
        }
        
        obj[keys[keys.length - 1]] = value;
    }
};

console.log("API URL:", appConfig.apiUrl);
appConfig.updateConfig('ui.theme', 'light');
console.log("–ù–æ–≤–∞ —Ç–µ–º–∞:", appConfig.ui.theme);

// –ü—Ä–∏–∫–ª–∞–¥ 3: –ü—Ä–æ—Å—Ç–∏–π –∫–µ—à
let cache = {
    data: {},
    
    set: function(key, value, ttl = 60000) { // TTL –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö
        this.data[key] = {
            value: value,
            expires: Date.now() + ttl
        };
    },
    
    get: function(key) {
        let item = this.data[key];
        if (!item) return null;
        
        if (Date.now() > item.expires) {
            delete this.data[key];
            return null;
        }
        
        return item.value;
    },
    
    has: function(key) {
        return this.get(key) !== null;
    },
    
    clear: function() {
        this.data = {};
    },
    
    size: function() {
        // –û—á–∏—â–∞—î–º–æ –∑–∞—Å—Ç–∞—Ä—ñ–ª—ñ –∑–∞–ø–∏—Å–∏
        let now = Date.now();
        Object.keys(this.data).forEach(key => {
            if (now > this.data[key].expires) {
                delete this.data[key];
            }
        });
        return Object.keys(this.data).length;
    }
};

// –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–µ—à—É
cache.set('user:1', {name: 'John', email: 'john@example.com'}, 2000);
console.log("üíæ –ó –∫–µ—à—É:", cache.get('user:1'));
console.log("üìä –†–æ–∑–º—ñ—Ä –∫–µ—à—É:", cache.size());

// üèÅ –ü–Ü–î–°–£–ú–û–ö –ö–£–†–°–£
console.log("\n=== üéì –í–Ü–¢–ê–Ñ–ú–û! –í–ò –ó–ê–í–ï–†–®–ò–õ–ò –ö–£–†–° JAVASCRIPT! ===");
console.log("‚úÖ –£–†–û–ö 1: –ó–º—ñ–Ω–Ω—ñ —Ç–∞ —Ç–∏–ø–∏ –¥–∞–Ω–∏—Ö - –æ—Å–≤–æ—î–Ω–æ!");
console.log("‚úÖ –£–†–û–ö 2: –û–ø–µ—Ä–∞—Ç–æ—Ä–∏ —Ç–∞ –≤–∏—Ä–∞–∑–∏ - –æ—Å–≤–æ—î–Ω–æ!");
console.log("‚úÖ –£–†–û–ö 3: –£–º–æ–≤–Ω—ñ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó - –æ—Å–≤–æ—î–Ω–æ!");
console.log("‚úÖ –£–†–û–ö 4: –¶–∏–∫–ª–∏ - –æ—Å–≤–æ—î–Ω–æ!");
console.log("‚úÖ –£–†–û–ö 5: –§—É–Ω–∫—Ü—ñ—ó - –æ—Å–≤–æ—î–Ω–æ!");
console.log("‚úÖ –£–†–û–ö 6: –ú–∞—Å–∏–≤–∏ - –æ—Å–≤–æ—î–Ω–æ!");
console.log("‚úÖ –£–†–û–ö 7: –û–±'—î–∫—Ç–∏ - –æ—Å–≤–æ—î–Ω–æ!");

console.log("\nüöÄ –í–ò –¢–ï–ü–ï–† –ó–ù–ê–Ñ–¢–ï:");
console.log("üîπ –û—Å–Ω–æ–≤–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É JavaScript");
console.log("üîπ –Ø–∫ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ –¥–∞–Ω–∏–º–∏ —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤");
console.log("üîπ –Ø–∫ –ø—Ä–∏–π–º–∞—Ç–∏ —Ä—ñ—à–µ–Ω–Ω—è –≤ –∫–æ–¥—ñ");
console.log("üîπ –Ø–∫ –ø–æ–≤—Ç–æ—Ä—é–≤–∞—Ç–∏ –¥—ñ—ó –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ü–∏–∫–ª—ñ–≤");
console.log("üîπ –Ø–∫ –æ—Ä–≥–∞–Ω—ñ–∑—É–≤–∞—Ç–∏ –∫–æ–¥ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ñ—É–Ω–∫—Ü—ñ–π");
console.log("üîπ –Ø–∫ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ –º–∞—Å–∏–≤–∞–º–∏ —Ç–∞ –æ–±'—î–∫—Ç–∞–º–∏");
console.log("üîπ –Ø–∫ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏");

console.log("\nüéØ –ù–ê–°–¢–£–ü–ù–Ü –ö–†–û–ö–ò:");
console.log("üìö –í–∏–≤—á–∞–π—Ç–µ DOM –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –≤–µ–±-—Å—Ç–æ—Ä—ñ–Ω–∫–∞–º–∏");
console.log("üåê –î–æ—Å–ª—ñ–¥–∂—É–π—Ç–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è");
console.log("‚öôÔ∏è –í–∏–≤—á–∞–π—Ç–µ —Å—É—á–∞—Å–Ω–∏–π JavaScript (ES6+)");
console.log("üõ†Ô∏è –ü—Ä–æ–±—É–π—Ç–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏: React, Vue, Angular");
console.log("üíº –°—Ç–≤–æ—Ä—é–π—Ç–µ –≤–ª–∞—Å–Ω—ñ –ø—Ä–æ–µ–∫—Ç–∏!");

console.log("\nüí™ –ü—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ –ø—Ä–∞–∫—Ç–∏–∫—É–≤–∞—Ç–∏—Å—è —ñ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏!");
console.log("üåü JavaScript - —Ü–µ —Ç—ñ–ª—å–∫–∏ –ø–æ—á–∞—Ç–æ–∫ –≤–∞—à–æ—ó –ø–æ–¥–æ—Ä–æ–∂—ñ —É –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è!");

// setTimeout(() => {
//     console.log("–ß–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏:", cache.get('user:1')); // null - –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏–π
// }, 3000);