// ===========================================
// ‚öôÔ∏è –£–†–û–ö 5: –§–£–ù–ö–¶–Ü–á –í JAVASCRIPT (FUNCTIONS)
// ===========================================

/*
üìö –©–û –í–ò–í–ß–ò–ú–û –í –¶–¨–û–ú–£ –£–†–û–¶–Ü:
- –†—ñ–∑–Ω—ñ —Å–ø–æ—Å–æ–±–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π
- –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º —Ç–∞ rest-–ø–∞—Ä–∞–º–µ—Ç—Ä–∏
- –û–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—ñ (scope) —Ç–∞ –∑–∞–º–∏–∫–∞–Ω–Ω—è (closures)
- Callback —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞ —Ñ—É–Ω–∫—Ü—ñ—ó –≤–∏—â–æ–≥–æ –ø–æ—Ä—è–¥–∫—É
- –†–µ–∫—É—Ä—Å—ñ—è - —Ñ—É–Ω–∫—Ü—ñ—ó —â–æ –≤–∏–∫–ª–∏–∫–∞—é—Ç—å —Å–µ–±–µ
- –ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –ø—Ä–∏–∫–ª–∞–¥–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π
*/

console.log("=== ‚öôÔ∏è –°–ü–û–°–û–ë–ò –û–ì–û–õ–û–®–ï–ù–ù–Ø –§–£–ù–ö–¶–Ü–ô ===");

// üìñ –§–£–ù–ö–¶–Ü–Ø - —Ü–µ –±–ª–æ–∫ –∫–æ–¥—É —â–æ –≤–∏–∫–æ–Ω—É—î –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É –∑–∞–¥–∞—á—É
// –§—É–Ω–∫—Ü—ñ—ó —Ä–æ–±–ª—è—Ç—å –∫–æ–¥ –±—ñ–ª—å—à –æ—Ä–≥–∞–Ω—ñ–∑–æ–≤–∞–Ω–∏–º —Ç–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–Ω–∏–º

// üéØ –°–ü–û–°–Ü–ë 1: Function Declaration (–ö–ª–∞—Å–∏—á–Ω–µ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è)
function createGreeting(userName) {
    console.log(`üîß –§—É–Ω–∫—Ü—ñ—è createGreeting –≤–∏–∫–ª–∏–∫–∞–Ω–∞ –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º: ${userName}`);
    return `üëã –í—ñ—Ç–∞—é, ${userName}! –†–∞–¥–∏–π –ø–æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—è!`;
}

// –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é —ñ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
let welcomeMessage = createGreeting("–ú–∞—Ä—ñ—è");
console.log(`üì§ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${welcomeMessage}`);

// üéØ –°–ü–û–°–Ü–ë 2: Function Expression (–§—É–Ω–∫—Ü—ñ—è —è–∫ –≤–∏—Ä–∞–∑)
const createFarewell = function(personName) {
    console.log(`üîß –ê–Ω–æ–Ω—ñ–º–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫–∞–Ω–∞ –¥–ª—è: ${personName}`);
    return `üëã –î–æ –∑—É—Å—Ç—Ä—ñ—á—ñ, ${personName}! –ì–∞—Ä–Ω–æ–≥–æ –¥–Ω—è!`;
};

console.log(`üì§ ${createFarewell("–ü–µ—Ç—Ä–æ")}`);

// üéØ –°–ü–û–°–Ü–ë 3: Arrow Function (–°—Ç—Ä—ñ–ª–∫–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è ES6) - —Å—É—á–∞—Å–Ω–∏–π —Å—Ç–∏–ª—å
const calculateProduct = (firstNumber, secondNumber) => {
    console.log(`üîß –°—Ç—Ä—ñ–ª–∫–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è: ${firstNumber} √ó ${secondNumber}`);
    return firstNumber * secondNumber;
};

// ‚ö° –ö–û–†–û–¢–ö–ê –§–û–†–ú–ê —Å—Ç—Ä—ñ–ª–∫–æ–≤–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π (–±–µ–∑ —Ñ—ñ–≥—É—Ä–Ω–∏—Ö –¥—É–∂–æ–∫)
const getSquare = x => x * x;                    // –û–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä
const generateWelcome = () => "üåç –ü—Ä–∏–≤—ñ—Ç —Å–≤—ñ—Ç!"; // –ë–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤

console.log(`üßÆ –†–µ–∑—É–ª—å—Ç–∞—Ç –º–Ω–æ–∂–µ–Ω–Ω—è: ${calculateProduct(5, 3)}`);
console.log(`üìê –ö–≤–∞–¥—Ä–∞—Ç —á–∏—Å–ª–∞ 4: ${getSquare(4)}`);
console.log(`üéâ ${generateWelcome()}`);

// üí° –†–Ü–ó–ù–ò–¶–Ø –ú–Ü–ñ –°–ü–û–°–û–ë–ê–ú–ò:
console.log("\nüìã –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è —Å–ø–æ—Å–æ–±—ñ–≤ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è:");
console.log("‚úÖ Function Declaration: –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–æ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è (hoisting)");
console.log("‚úÖ Function Expression: –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –ø—ñ—Å–ª—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è");
console.log("‚úÖ Arrow Function: –∫–æ–º–ø–∞–∫—Ç–Ω–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, –Ω–µ–º–∞—î –≤–ª–∞—Å–Ω–æ–≥–æ 'this'");

console.log("\n=== üìù –ü–ê–†–ê–ú–ï–¢–†–ò –§–£–ù–ö–¶–Ü–ô ===");

// üéØ –ü–ê–†–ê–ú–ï–¢–†–ò –ó–ê –ó–ê–ú–û–í–ß–£–í–ê–ù–ù–Ø–ú - —è–∫—â–æ –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ
function buildUserProfile(fullName, userAge = 18, location = "–ö–∏—ó–≤", isActive = true) {
    console.log(`üë§ –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:`);
    console.log(`   –Ü–º'—è: ${fullName} ${fullName ? '‚úÖ' : '‚ùå'}`);
    console.log(`   –í—ñ–∫: ${userAge} (${userAge === 18 ? '–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º' : '–≤–∫–∞–∑–∞–Ω–æ'})`);
    console.log(`   –ú—ñ—Å—Ç–æ: ${location} (${location === '–ö–∏—ó–≤' ? '–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º' : '–≤–∫–∞–∑–∞–Ω–æ'})`);
    
    return {
        name: fullName,
        age: userAge,
        city: location,
        active: isActive
    };
}

console.log("\nüß™ –¢–µ—Å—Ç—É—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º:");
console.log("1Ô∏è‚É£ –¢—ñ–ª—å–∫–∏ —ñ–º'—è:", buildUserProfile("–ê–Ω–Ω–∞"));
console.log("\n2Ô∏è‚É£ –Ü–º'—è + –≤—ñ–∫:", buildUserProfile("–Ü–≤–∞–Ω", 25));
console.log("\n3Ô∏è‚É£ –í—Å—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:", buildUserProfile("–û–ª—å–≥–∞", 30, "–õ—å–≤—ñ–≤"));

// ‚≠ê REST –ü–ê–†–ê–ú–ï–¢–†–ò (...args) - –ø—Ä–∏–π–º–∞—é—Ç—å –Ω–µ–æ–±–º–µ–∂–µ–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤
function calculateSum(...inputNumbers) {
    console.log(`üßÆ –û—Ç—Ä–∏–º–∞–Ω–æ ${inputNumbers.length} —á–∏—Å–µ–ª: [${inputNumbers.join(', ')}]`);
    
    let runningTotal = 0;
    let calculation = "";
    
    for (let i = 0; i < inputNumbers.length; i++) {
        runningTotal += inputNumbers[i];
        calculation += inputNumbers[i];
        if (i < inputNumbers.length - 1) calculation += " + ";
    }
    
    console.log(`üîç –û–±—á–∏—Å–ª–µ–Ω–Ω—è: ${calculation} = ${runningTotal}`);
    return runningTotal;
}

console.log("\nüß™ –¢–µ—Å—Ç—É—î–º–æ rest –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:");
console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç 1: ${calculateSum(1, 2, 3)}`);
console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç 2: ${calculateSum(10, 20, 30, 40, 50)}`);
console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç 3: ${calculateSum(7)}`); // –û–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä

// üé® –î–ï–°–¢–†–£–ö–¢–£–†–ò–ó–ê–¶–Ü–Ø –ü–ê–†–ê–ú–ï–¢–†–Ü–í - —Ä–æ–∑–ø–∞–∫—É–≤–∞–Ω–Ω—è –æ–±'—î–∫—Ç–∞
function showPersonInfo({name, age, city, profession = "–Ω–µ –≤–∫–∞–∑–∞–Ω–æ"}) {
    console.log(`\nüë®‚Äçüíº === –ö–ê–†–¢–ö–ê –û–°–û–ë–ò ===`);
    console.log(`üìõ –Ü–º'—è: ${name}`);
    console.log(`üéÇ –í—ñ–∫: ${age} —Ä–æ–∫—ñ–≤`);
    console.log(`üèôÔ∏è –ú—ñ—Å—Ç–æ: ${city}`);
    console.log(`üíº –ü—Ä–æ—Ñ–µ—Å—ñ—è: ${profession}`);
    console.log(`==================`);
}

console.log("\nüß™ –¢–µ—Å—Ç—É—î–º–æ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—é:");
showPersonInfo({
    name: "–í–∞—Å–∏–ª—å –ü–µ—Ç—Ä–µ–Ω–∫–æ", 
    age: 32, 
    city: "–û–¥–µ—Å–∞",
    profession: "–≤–µ–±-—Ä–æ–∑—Ä–æ–±–Ω–∏–∫"
});

showPersonInfo({
    name: "–ú–∞—Ä—ñ—è –ö–æ–≤–∞–ª—å",
    age: 28,
    city: "–•–∞—Ä–∫—ñ–≤"
    // profession –Ω–µ –≤–∫–∞–∑–∞–Ω–æ - –±—É–¥–µ "–Ω–µ –≤–∫–∞–∑–∞–Ω–æ"
});

// üîÑ –ö–û–ú–ë–Ü–ù–£–í–ê–ù–ù–Ø –†–Ü–ó–ù–ò–• –¢–ò–ü–Ü–í –ü–ê–†–ê–ú–ï–¢–†–Ü–í
function advancedFunction(requiredParam, optionalParam = "default", ...extraParams) {
    console.log(`\nüîß –ê–Ω–∞–ª—ñ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ —Ñ—É–Ω–∫—Ü—ñ—ó:`);
    console.log(`üìå –û–±–æ–≤'—è–∑–∫–æ–≤–∏–π: ${requiredParam}`);
    console.log(`‚öôÔ∏è –û–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π: ${optionalParam}`);
    console.log(`üì¶ –î–æ–¥–∞—Ç–∫–æ–≤—ñ (${extraParams.length}): [${extraParams.join(', ')}]`);
    
    return {
        required: requiredParam,
        optional: optionalParam,
        extras: extraParams
    };
}

console.log("üß™ –ö–æ–º–±—ñ–Ω–æ–≤–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:");
advancedFunction("–≥–æ–ª–æ–≤–Ω–∏–π", "–≤–ª–∞—Å–Ω–∏–π", "–¥–æ–¥–∞—Ç–∫–æ–≤–∏–π1", "–¥–æ–¥–∞—Ç–∫–æ–≤–∏–π2", "–¥–æ–¥–∞—Ç–∫–æ–≤–∏–π3");

console.log("\n=== üåç –û–ë–õ–ê–°–¢–¨ –í–ò–î–ò–ú–û–°–¢–Ü (SCOPE) ===");

// üåê –ì–õ–û–ë–ê–õ–¨–ù–ê –û–ë–õ–ê–°–¢–¨ - –¥–æ—Å—Ç—É–ø–Ω–∞ —É –≤—Å—å–æ–º—É –∫–æ–¥—ñ
let globalMessage = "–Ø –¥–æ—Å—Ç—É–ø–Ω–∞ —É –≤—Å—å–æ–º—É –∫–æ–¥—ñ! üåç";

function demonstrateScope() {
    // üè† –õ–û–ö–ê–õ–¨–ù–ê –û–ë–õ–ê–°–¢–¨ - –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –≤ —Ü—ñ–π —Ñ—É–Ω–∫—Ü—ñ—ó
    let localMessage = "–Ø –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –≤ —Ü—ñ–π —Ñ—É–Ω–∫—Ü—ñ—ó üè†";
    
    function nestedFunction() {
        // ü™Ü –í–ö–õ–ê–î–ï–ù–ê –û–ë–õ–ê–°–¢–¨ - –º–∞—î –¥–æ—Å—Ç—É–ø –¥–æ –≤—Å—ñ—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö –æ–±–ª–∞—Å—Ç–µ–π
        let nestedMessage = "–Ø —É –≤–∫–ª–∞–¥–µ–Ω—ñ–π —Ñ—É–Ω–∫—Ü—ñ—ó ü™Ü";
        
        console.log("‚úÖ", globalMessage);  // –î–æ—Å—Ç—É–ø–Ω–∞
        console.log("‚úÖ", localMessage);   // –î–æ—Å—Ç—É–ø–Ω–∞  
        console.log("‚úÖ", nestedMessage);  // –î–æ—Å—Ç—É–ø–Ω–∞
    }
    
    nestedFunction();
    // ‚ùå console.log(nestedMessage); // –ü–æ–º–∏–ª–∫–∞! –ù–µ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—É—Ç
}

demonstrateScope();

// üîí –ó–ê–ú–ò–ö–ê–ù–ù–Ø (CLOSURES) - —Ñ—É–Ω–∫—Ü—ñ—è "–∑–∞–ø–∞–º'—è—Ç–æ–≤—É—î" —Å–≤–æ—ó –∑–º—ñ–Ω–Ω—ñ
console.log("\nüîí –ü—Ä–∏–∫–ª–∞–¥ –∑–∞–º–∏–∫–∞–Ω–Ω—è: –ª—ñ—á–∏–ª—å–Ω–∏–∫–∏");

function createPersonalCounter(initialValue = 0) {
    let privateCount = initialValue; // –ü—Ä–∏–≤–∞—Ç–Ω–∞ –∑–º—ñ–Ω–Ω–∞
    
    return function() {
        privateCount++; // –ó–º—ñ–Ω—é—î–º–æ –ø—Ä–∏–≤–∞—Ç–Ω—É –∑–º—ñ–Ω–Ω—É
        return privateCount;
    };
}

const userCounter = createPersonalCounter(0);
const adminCounter = createPersonalCounter(100);

console.log("üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:", userCounter()); // 1
console.log("üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:", userCounter()); // 2
console.log("üë®‚Äçüíº –ê–¥–º—ñ–Ω:", adminCounter());      // 101
console.log("üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:", userCounter()); // 3
console.log("üë®‚Äçüíº –ê–¥–º—ñ–Ω:", adminCounter());      // 102

// –ö–æ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –º–∞—î —Å–≤–æ—é –ø—Ä–∏–≤–∞—Ç–Ω—É –∑–º—ñ–Ω–Ω—É!

console.log("\n=== üìû CALLBACK –§–£–ù–ö–¶–Ü–á ===");

// üìñ CALLBACK - —Ñ—É–Ω–∫—Ü—ñ—è —â–æ –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è —è–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä —ñ–Ω—à—ñ–π —Ñ—É–Ω–∫—Ü—ñ—ó
function transformArray(inputArray, transformFunction) {
    console.log(`üîÑ –û–±—Ä–æ–±–ª—è—î–º–æ –º–∞—Å–∏–≤: [${inputArray.join(', ')}]`);
    let resultArray = [];
    
    for (let element of inputArray) {
        let transformed = transformFunction(element);
        resultArray.push(transformed);
        console.log(`  ${element} ‚Üí ${transformed}`);
    }
    
    return resultArray;
}

const testNumbers = [1, 2, 3, 4, 5];

console.log("üß™ –¢–µ—Å—Ç—É—î–º–æ callback —Ñ—É–Ω–∫—Ü—ñ—ó:");
const doubledResults = transformArray(testNumbers, x => x * 2);
const squaredResults = transformArray(testNumbers, x => x * x);

console.log(`üìä –ü–æ–¥–≤–æ—î–Ω—ñ: [${doubledResults.join(', ')}]`);
console.log(`üìä –£ –∫–≤–∞–¥—Ä–∞—Ç—ñ: [${squaredResults.join(', ')}]`);

console.log("\n=== üîÑ –†–ï–ö–£–†–°–Ü–Ø - –§–£–ù–ö–¶–Ü–Ø –í–ò–ö–õ–ò–ö–ê–Ñ –°–ï–ë–ï ===");

// üßÆ –§–ê–ö–¢–û–†–Ü–ê–õ: n! = n √ó (n-1) √ó (n-2) √ó ... √ó 1
function calculateFactorial(number) {
    console.log(`üîÑ –í–∏–∫–ª–∏–∫–∞–Ω–æ calculateFactorial(${number})`);
    
    // üõë –ë–ê–ó–û–í–ò–ô –í–ò–ü–ê–î–û–ö - —É–º–æ–≤–∞ –∑—É–ø–∏–Ω–∫–∏ —Ä–µ–∫—É—Ä—Å—ñ—ó
    if (number <= 1) {
        console.log(`‚úÖ –ë–∞–∑–æ–≤–∏–π –≤–∏–ø–∞–¥–æ–∫: ${number}! = 1`);
        return 1;
    }
    
    // üîÑ –†–ï–ö–£–†–°–ò–í–ù–ò–ô –í–ò–ö–õ–ò–ö
    let result = number * calculateFactorial(number - 1);
    console.log(`üìä ${number}! = ${number} √ó ${number-1}! = ${result}`);
    return result;
}

console.log(`üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: 5! = ${calculateFactorial(5)}`);

// üåü –ß–ò–°–õ–ê –§–Ü–ë–û–ù–ê–ß–ß–Ü: F(n) = F(n-1) + F(n-2)
function fibonacciNumber(position) {
    if (position <= 1) return position;
    return fibonacciNumber(position - 1) + fibonacciNumber(position - 2);
}

console.log("\nüåü –ü–µ—Ä—à—ñ —á–∏—Å–ª–∞ –§—ñ–±–æ–Ω–∞—á—á—ñ:");
for (let i = 0; i < 7; i++) {
    console.log(`F(${i}) = ${fibonacciNumber(i)}`);
}

console.log("\n=== üéØ –ü–†–ê–ö–¢–ò–ß–ù–Ü –ü–†–ò–ö–õ–ê–î–ò –§–£–ù–ö–¶–Ü–ô ===");

// ‚úâÔ∏è –ü–†–ò–ö–õ–ê–î 1: –í–∞–ª—ñ–¥–∞—Ç–æ—Ä –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ—ó –ø–æ—à—Ç–∏
function validateEmail(emailAddress) {
    const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    let isValid = emailPattern.test(emailAddress);
    console.log(`üìß ${emailAddress}: ${isValid ? "‚úÖ –≤–∞–ª—ñ–¥–Ω–∏–π" : "‚ùå –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π"}`);
    return isValid;
}

console.log("üìß –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ email –∞–¥—Ä–µ—Å:");
["ivan@gmail.com", "invalid-email", "maria@domain.co.uk"].forEach(validateEmail);

// üé® –ü–†–ò–ö–õ–ê–î 2: –ù–∞–±—ñ—Ä —Ñ—É–Ω–∫—Ü—ñ–π –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ç–µ–∫—Å—Ç–æ–º
const textProcessor = {
    toTitleCase: text => text.charAt(0).toUpperCase() + text.slice(1).toLowerCase(),
    reverseText: text => text.split('').reverse().join(''),
    removeAllSpaces: text => text.replace(/\s+/g, ''),
    countWords: text => text.trim().split(/\s+/).filter(word => word.length > 0).length
};

const testString = "  –ø—Ä–∏–≤—ñ—Ç —á—É–¥–æ–≤–∏–π —Å–≤—ñ—Ç  ";
console.log(`\nüé® –û–±—Ä–æ–±–∫–∞ —Ç–µ–∫—Å—Ç—É: "${testString}"`);
console.log(`üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫: "${textProcessor.toTitleCase(testString)}"`);
console.log(`üîÑ –†–µ–≤–µ—Ä—Å: "${textProcessor.reverseText(testString.trim())}"`);
console.log(`üö´ –ë–µ–∑ –ø—Ä–æ–±—ñ–ª—ñ–≤: "${textProcessor.removeAllSpaces(testString)}"`);
console.log(`üî¢ –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ª—ñ–≤: ${textProcessor.countWords(testString)}`);

// üßÆ –ü–†–ò–ö–õ–ê–î 3: –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
const smartCalculator = {
    add: (x, y) => x + y,
    subtract: (x, y) => x - y,
    multiply: (x, y) => x * y,
    divide: (x, y) => y !== 0 ? x / y : "‚ö†Ô∏è –î—ñ–ª–µ–Ω–Ω—è –Ω–∞ –Ω—É–ª—å –Ω–µ–º–æ–∂–ª–∏–≤–µ!",
    power: (base, exponent) => Math.pow(base, exponent),
    percentage: (value, percent) => (value * percent) / 100
};

console.log("\nüßÆ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞:");
console.log(`‚ûï 15 + 7 = ${smartCalculator.add(15, 7)}`);
console.log(`‚ûñ 15 - 7 = ${smartCalculator.subtract(15, 7)}`);
console.log(`‚úñÔ∏è 15 √ó 7 = ${smartCalculator.multiply(15, 7)}`);
console.log(`‚ûó 15 √∑ 3 = ${smartCalculator.divide(15, 3)}`);
console.log(`‚ö° 2¬≥ = ${smartCalculator.power(2, 3)}`);
console.log(`üìä 20% –≤—ñ–¥ 250 = ${smartCalculator.percentage(250, 20)}`);

// üîç –ü–†–ò–ö–õ–ê–î 4: –§—É–Ω–∫—Ü—ñ—ó –ø–æ—à—É–∫—É —Ç–∞ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó
function findFirstMatch(dataArray, testFunction) {
    for (let item of dataArray) {
        if (testFunction(item)) return item;
    }
    return null;
}

function filterItems(dataArray, testFunction) {
    return dataArray.filter(testFunction); // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤–±—É–¥–æ–≤–∞–Ω–∏–π –º–µ—Ç–æ–¥
}

const employees = [
    { name: "–ê–Ω–Ω–∞ –ö–æ–≤–∞–ª—å", age: 25, department: "IT", salary: 25000 },
    { name: "–ü–µ—Ç—Ä–æ –ú–µ–ª—å–Ω–∏–∫", age: 30, department: "HR", salary: 22000 },
    { name: "–ú–∞—Ä—ñ—è –ü–µ—Ç—Ä–µ–Ω–∫–æ", age: 22, department: "IT", salary: 27000 },
    { name: "–Ü–≤–∞–Ω –®–µ–≤—á–µ–Ω–∫–æ", age: 28, department: "Finance", salary: 30000 }
];

console.log("\nüë• –ü–æ—à—É–∫ —Ç–∞ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤:");

const youngEmployee = findFirstMatch(employees, emp => emp.age < 25);
const itEmployees = filterItems(employees, emp => emp.department === "IT");
const highPaidEmployees = filterItems(employees, emp => emp.salary > 25000);

console.log("üîç –ù–∞–π–º–æ–ª–æ–¥—à–∏–π —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫:", youngEmployee?.name || "–Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
console.log("üíª IT –≤—ñ–¥–¥—ñ–ª:", itEmployees.map(emp => emp.name).join(", "));
console.log("üí∞ –í–∏—Å–æ–∫–æ–æ–ø–ª–∞—á—É–≤–∞–Ω—ñ:", highPaidEmployees.map(emp => emp.name).join(", "));

// üèÅ –ü–Ü–î–°–£–ú–û–ö –£–†–û–ö–£
console.log("\n=== üìö –ü–Ü–î–°–£–ú–û–ö –£–†–û–ö–£ 5 ===");
console.log("‚úÖ –û–ø–∞–Ω—É–≤–∞–ª–∏ —Ä—ñ–∑–Ω—ñ —Å–ø–æ—Å–æ–±–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π");
console.log("‚úÖ –í–∏–≤—á–∏–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º —Ç–∞ rest-–ø–∞—Ä–∞–º–µ—Ç—Ä–∏");
console.log("‚úÖ –†–æ–∑—ñ–±—Ä–∞–ª–∏ –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—ñ —Ç–∞ –∑–∞–º–∏–∫–∞–Ω–Ω—è");
console.log("‚úÖ –ü–æ–ø—Ä–∞–∫—Ç–∏–∫—É–≤–∞–ª–∏—Å—è –∑ callback —Ñ—É–Ω–∫—Ü—ñ—è–º–∏ —Ç–∞ —Ä–µ–∫—É—Ä—Å—ñ—î—é");
console.log("‚úÖ –°—Ç–≤–æ—Ä–∏–ª–∏ –∫–æ—Ä–∏—Å–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–µ–∞–ª—å–Ω–∏—Ö –∑–∞–¥–∞—á");
console.log("üéØ –ù–∞—Å—Ç—É–ø–Ω–∏–π –∫—Ä–æ–∫: –º–∞—Å–∏–≤–∏ —Ç–∞ –º–µ—Ç–æ–¥–∏ —Ä–æ–±–æ—Ç–∏ –∑ –Ω–∏–º–∏!");